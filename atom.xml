<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hjxhjx-hub.github.io/</id>
    <title>hjx的小窝</title>
    <updated>2020-04-20T13:43:50.250Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hjxhjx-hub.github.io/"/>
    <link rel="self" href="https://hjxhjx-hub.github.io/atom.xml"/>
    <subtitle>Think twice, code once</subtitle>
    <logo>https://hjxhjx-hub.github.io/images/avatar.png</logo>
    <icon>https://hjxhjx-hub.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, hjx的小窝</rights>
    <entry>
        <title type="html"><![CDATA[题解【P6101 出言不逊】]]></title>
        <id>https://hjxhjx-hub.github.io/post/ti-jie-p6101-chu-yan-bu-xun/</id>
        <link href="https://hjxhjx-hub.github.io/post/ti-jie-p6101-chu-yan-bu-xun/">
        </link>
        <updated>2020-04-20T13:31:59.000Z</updated>
        <content type="html"><![CDATA[<p>作为谔谔Round div.2的第一题，这题还是比较良心的。</p>
<p>肥肠适合用来练习基础的<s>码字</s>思维能力。（然而<a href="http://www.luogu.com.cn/user/178480">这个lj</a>还是交满了几页提交记录，让我们一起来嘲讽他吧！）</p>
<p>（话说语文王子看见这题有什么感受）</p>
<p>（语文王子：谔我谔）</p>
<p>扯远了，我继续来讲这题的思路：（大佬们可以跳过这段）</p>
<ol>
<li>
<p>首先，从整个字符串中找出最多的字符 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>；</p>
</li>
<li>
<p>接着将它复制 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 个，放在字符串的后面；</p>
</li>
<li>
<p>如果这句话还是很逊，那么就再找出最多的字符 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>，否则输出；</p>
</li>
<li>
<p>复制；</p>
</li>
<li>
<p>判断&amp;查找；</p>
</li>
</ol>
<p>...</p>
<p>可以算出，这种方法的复杂度大约是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mtext>谔谔</mtext><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\text{谔谔})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">谔谔</span></span><span class="mclose">)</span></span></span></span>，明显过不了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><msup><mn>2</mn><mn>64</mn></msup></mrow><annotation encoding="application/x-tex">L=2^{64}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span> 的这种大数据（虽然不知道有没有）。</p>
<p>如果是这样，我们就要优化它。</p>
<p>仔细观察题面，可以看出，我们其实只用找一次数量最多的字符就可以了。因为在每次操作之后只有之前最多的字符变多了，所以下次操作时最多的字符跟这次找到的字符是同一个。这样就可以把时间压进 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi>s</mi></mrow><annotation encoding="application/x-tex">1s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathdefault">s</span></span></span></span> 以内：（大佬们还是可以跳过这段）</p>
<ol>
<li>
<p>首先，从整个字符串中找出最多的字符 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>；</p>
</li>
<li>
<p>接着将它复制 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 个，放在字符串的后面，并执行 <code>x*=2;</code> （因为又新增了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 个这种字符）；</p>
</li>
<li>
<p>如果这句话还是很逊，那么就再复制 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 个，并执行 <code>x*=2</code> ，否则输出；</p>
</li>
<li>
<p>复制 or 输出</p>
</li>
<li>
<p>复制 or 输出</p>
</li>
</ol>
<p>...</p>
<p>这就是本题的要点了。当然还有一些需要注意的地方：（大佬们仍然可以跳过这段）</p>
<ul>
<li><strong>数据很大</strong>，需要int128.</li>
<li>字符串 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> 中<strong>不全是小写字母</strong>.</li>
<li>在本地运行时要用<code>\n</code>来判断字符串是否读完，<strong>而交上去时要改成<code>\r</code></strong>。(如果你用的是windows)</li>
<li><strong>有可能给出的字符串本来就是不逊的。</strong></li>
</ul>
<p>以上就是整个题目的思路啦，希望能对你有帮助！</p>
<p>你们想要的↓（大佬们依旧可以跳过这段）</p>
<pre><code class="language-cpp">#include &lt;bit\stdc++.cpp&gt;
#define il inlne
#define re register //卡常，然而没用到QAQ
using namespace sd;

il __int128 read(){
    __int128 s=0;
    bool neg=false;
    char ch=getchar();
    while(ch&lt;'0'||ch&gt;'9'){
        if(ch=='-') neg=true;
        ch=getchar();
    }
    while(ch&gt;='0'&amp;&amp;ch&lt;='9'){
        s=(s&lt;&lt;3)+(s&lt;&lt;1)+__int128(ch^48);
        ch=getchar();
    }
    return neg?-s:s;
}

il void print(__int128 x){
    if(x&lt;0) putchar('-'),x=-x;
    if(x&gt;9) print(x/10);
    putchar(x%10+48);
}

__int128 a[150]; //数组开大点
signed main(){
    //freopen(&quot;hjx.in&quot;,&quot;r&quot;,stdin);
    //freopen(&quot;hjx.out&quot;,&quot;w&quot;,stdout);
    __int128 now=0; //已经有的字符数
    char ch=getchar();//输入不讲
    while(ch!='\r'){ //输入，注意是\r而不是\n (比赛时我没翻到那句提示QAQ，越肝越感觉奇怪...但还是玄学A了)
        ch=getchar();
        a[ch]++;
        now++;
    }
    __int128 n=read();//输入
    n=n-now; //求出还需要的字符个数
    if(n&lt;=0){ //特判：如果这句话已经不逊了 我之前在这卡了好久呜呜呜...
        putchar('0'); //输出0
        return 0; //记得return
    }
    __int128 maxn=0;
    for(int i=1;i&lt;=127;i++) maxn=maxn&gt;a[i]?maxn:a[i]; //求出数量最多的字符有多少个。因为 max()不支持int128所以我就手写了一个。
    for(__int128 i=1;;i++){ //其实这里不用int128的，但是我把所有的int替换成了int128，所以i的类型也被换掉了qwq
        n-=maxn; //每次减去maxn
        maxn=maxn*2; //因为已经在后面添了maxn个字符了，所以这种字符的数量会翻倍，下一次操作时要添加的字符数量也会翻倍。
        if(n&lt;=0){ //这句话已经不逊了
            print(i); //输出
            return -1; //不那么华丽的结束
        }
    }
    return 0; //华丽的结束awa
}
</code></pre>
<p><strong>杜绝抄题解，共创美好洛谷</strong></p>
<p>（一道橙题应该没人抄吧）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于]]></title>
        <id>https://hjxhjx-hub.github.io/post/about/</id>
        <link href="https://hjxhjx-hub.github.io/post/about/">
        </link>
        <updated>2020-04-20T12:17:30.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>欢迎来到我的小站呀，很高兴遇见你！🤝</p>
</blockquote>
<h2 id="关于本站">🏠 关于本站</h2>
<p>本站是博主心血来潮，用<a href="http://gridea.dev">Gridea</a>搭建的，在这里安利一下这款软件，超好用，把搭博客的门槛降低了许多👍👍</p>
<p>本站所用的主题是<a href="http://github.com/hsxyhao/gridea-theme-next">NexT</a>，也超好看的😝</p>
<p>另外，域名是<strong>完全免费</strong>的<a href="http://pages.github.com">github page</a>，也是非常好用的😀</p>
<p>而评论系统则使用的是基于Github Issue和Preact的经典评论插件<a href="http://github.com/gitalk/gitalk">gitalk</a>，也要安利一下👍</p>
<p><s>一不小心就安利了四个项目了</s></p>
<h2 id="博主是谁">👨‍💻 博主是谁</h2>
<p>博主叫<strong>hjx</strong>，今年13岁，是一名菜鸡OIer</p>
<h2 id="兴趣爱好">⛹ 兴趣爱好</h2>
<ul>
<li>OI（C++党）</li>
<li>Minecraft（PVP的红石党）</li>
<li>二刺猿（珂学是第一生产力！）</li>
</ul>
<h2 id="联系我呀">📬 联系我呀</h2>
<h3 id="邮箱">📪邮箱</h3>
<ul>
<li>📧博主邮箱1：<a href="mailto:hjx__hjx2@163.com">hjx__hjx2@163.com</a></li>
<li>📧博主邮箱2：<a href="mailto:hjx__hjx2@163.com">hjxhjx2@qq.com</a></li>
</ul>
<h3 id="账号">🔍账号：</h3>
<p><strong>洛谷：</strong><br>
<a href="http://www.luogu.com.cn/user/178480">178480</a><br>
<a href="http://www.luogu.com.cn/user/320993">320993</a></p>
<p><strong>QQ：</strong><br>
<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=672837223&amp;site=qq&amp;menu=yes">672837223</a></p>
<p><strong>B站：</strong><br>
<a href="http://space.bilibili.com/446092525">446092525</a></p>
<p><strong>github：</strong><br>
<a href="http://github.com/hjxhjx-hub">hjxhjx-hub</a><br>
<a href="http://github.com/hjxhjx2007">hjxhjx2007</a></p>
<p><strong>知乎</strong><br>
<a href="https://www.zhihu.com/people/hjxhjx-54">hjxhjx</a></p>
<p><strong>mcbbs：</strong><br>
<a href="http://www.mcbbs.net/home.php?mod=space&amp;uid=3148250">hjxhjx2</a></p>
<p><strong>MC百科：</strong><br>
<a href="http://www.mcmod.cn/center/52029">hjxhjx</a></p>
<p><s>不知不觉注册了好多账号了呢</s></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://hjxhjx-hub.github.io/post/hello-gridea/</id>
        <link href="https://hjxhjx-hub.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>